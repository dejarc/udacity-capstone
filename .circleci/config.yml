# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:
  build:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      # Checkout code from git
      - checkout
      - run:
          name: Install dependencies required by docker build and deploy
          command: |
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            docker -v
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl version --client
            aws --version
      - run:
          name: push to ecr registry
          command: |
            aws eks update-kubeconfig --region us-west-2 --name EKS
            kubectl get deployment
            aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 977473413593.dkr.ecr.us-west-2.amazonaws.com
            docker build -t udacity-capstone .
            docker tag udacity-capstone:latest 977473413593.dkr.ecr.us-west-2.amazonaws.com/udacity-capstone:latest
            docker push 977473413593.dkr.ecr.us-west-2.amazonaws.com/udacity-capstone:latest

workflows:
  default:
    jobs:
#      - build
      - deploy
